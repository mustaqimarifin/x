---
import {formatDate} from "@lib/utils"
import type {CollectionEntry} from "astro:content"
//import {createEffect, createSignal} from "solid-js"

//import ArrowCard from "./ArrowCard"
//mport { cn } from "@lib/utils"

type Props = {
  blog: CollectionEntry<"blog">[]
  tags?: string[]
  pill?: boolean
}

import {getCollection} from "astro:content"

type Item = {
  slug: string
  count: number
}

const {blog, pill} = Astro.props


import { db, eq, Views} from 'astro:db';
const views = await db.select().from(Views).where(eq(Views.slug, blog[0].slug))
const posts = await getCollection("blog")
const sortedPosts = posts.sort((a, b) => {
  const aDate = a.data.date
  const bDate = b.data.date
  return Date.parse(bDate.toString()) - Date.parse(aDate.toString())
})


---

<!-- <div
  class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
  {
    sortedPosts.map((post) => {
      return (
          <a
      href={`/${collection}/${slug}`}
      class="group  gap-3 flex items-center rounded-lg hover:bg-black/5 hover:dark:bg-white/10 transition-colors duration-300 ease-in-out"
    >
          <div class="w-full group-hover:text-black group-hover:dark:text-white blend">
            <div class="flex flex-wrap items-center gap-2">
              <div class="font-mono tabular-nums text-xs uppercase">{formatDate(date)}</div>

              <div class="font-semibold mt-3 text-black dark:text-white">{post.data.title}</div>
              <ViewTotal slug={slug} />
              <div class="text-sm line-clamp-2">{summary}</div>
              <ul class="flex flex-wrap mt-2 gap-1 text-xs font-bold font-mono  uppercase">
                {tags.map(
                  (
                    tag: string // this line has an error; Parameter 'tag' implicitly has an 'any' type.ts(7006)
                  ) => (
                    <li class=" py-0.5 px-1 rounded bg-black/5 dark:bg-white/20 text-black/75 dark:text-white/75">{tag}</li>
                  )
                )}
              </ul>
            </div>
          </div>
        </a>
      )
    })
  }
</div>
 -->
<div class="w-full grid grid-cols-1 sm:grid-cols-2 gap-6">
  <div class="sm:col-span-2">
    <div class="flex flex-col">
      <div class="text-sm uppercase mb-2">
        SHOWING {sortedPosts.length} OF {blog.length} POSTS
      </div>
      <ul class="flex flex-col gap-3">
        {
          sortedPosts?.map((p) => (
            <li>
              <a
      href={`/${p.collection}/${p.slug}`}
      class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out"
    >
      <div class="w-full group-hover:text-black group-hover:dark:text-white blend">
        <div class="flex flex-wrap items-center gap-2">
          {pill && (
            <div class="text-sm capitalize px-2 py-0.5 rounded-full border border-black/15 dark:border-white/25">
              {p.collection === "blog" ? "post" : "project"}
            </div>
          )}
          <div class="font-mono tabular-nums text-xs uppercase">
            {formatDate(p.data.date)}
            <div class="flex-1 mr-4">{views[0]?.count}</div>
          </div>
        </div>
        <div class="font-semibold mt-3 text-black dark:text-white">
          {p.data.title}
        </div>

        <div class="text-sm line-clamp-2">{p.data.summary}</div>
        <ul class="flex flex-wrap mt-2 gap-1 text-xs font-bold font-mono  uppercase">
          {p.data.tags.map(
            (
              tag: string, // this line has an error; Parameter 'tag' implicitly has an 'any' type.ts(7006)
            ) => (
              <li class=" py-0.5 px-1 rounded bg-black/5 dark:bg-white/20 text-black/75 dark:text-white/75">
                {tag}
              </li>
            ),
          )}
        </ul>
      </div>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        stroke-width="2.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white"
      >
        <line
          x1="5"
          y1="12"
          x2="19"
          y2="12"
          class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
        />
        <polyline
          points="12 5 19 12 12 19"
          class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
        />
      </svg>
    </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>
